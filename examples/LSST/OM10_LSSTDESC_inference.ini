[runtime]
; The emcee sampler, which uses the Goodman & Weare algorithm
sampler = emcee

[emcee]
; The emcee sampler uses the concept of walkers, a collection
; of live points.  Sampling is done along lines that connect
; pairs of walkers.  The number of walkers must be at least
; 2*nparam + 1, but in general more than that usually works
; better.
walkers = 64
; This many samples is overkill, just to make the plots
; look a lot nicer
samples = 400
; This is the interval at which convergence diagnostics
; are performed
nsteps = 100

[output]
filename = demos/OM10_LSSTDESC_inferred_parameters.txt
format = text
verbosity= debug

[pipeline]
; Weâ€™ll just try one likelihood, the mock OM10 LSST DESC lensed quasar sample.

modules = consistency camb time_delay_likelihood

values = demos/OM10_LSSTDESC_uniform_prior_values.ini
extra_output =
likelihoods = mock
quiet=T
debug=F
timing=F

[time_delay_likelihood]
lens_name=mock
file=cosmosis-standard-library/strong_lensing/time_delay_lenses/time_delay_interface.py
filename=cosmosis-standard-library/strong_lensing/time_delay_lenses/mock.txt
lambdaD=0.0

[camb]
; For background-only data we do not need a full
; Boltzmann evaluation, just D(z), etc.
; Setting mode=background means we get this.
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=background
feedback=0


; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py
